CREATE TABLE IF NOT EXISTS ChatDB (
    id INTEGER PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    updated INTEGER NOT NULL,
    listOrder INTEGER NOT NULL
);

clearChats:
DELETE FROM ChatDB;

deleteChats:
DELETE FROM ChatDB WHERE id NOT IN (?);

insertChats:
INSERT OR REPLACE INTO ChatDB (id, name, updated, listOrder)
VALUES (?, ?, ?, ?);

insertChat:
INSERT OR REPLACE INTO ChatDB (id, name, updated, listOrder)
VALUES (?, ?, ?, ?);

getChats:
SELECT * FROM ChatDB ORDER BY listOrder DESC;

getChatById:
SELECT * FROM ChatDB WHERE id = ?;

getLastUpdatedChat:
SELECT * FROM ChatDB ORDER BY updated DESC LIMIT 1;

updateChat:
UPDATE ChatDB SET name = ?, updated = ?, listOrder = ? WHERE id = ?;

updateChats:
UPDATE ChatDB
SET id = ?, name = ?, updated = ?, listOrder = ?
WHERE id = ?;

deleteChatById:
DELETE FROM ChatDB WHERE id = ?;

CREATE TABLE IF NOT EXISTS MessageDB (
    id INTEGER PRIMARY KEY,
    chatId INTEGER,
    author TEXT,
    message TEXT,
    updatedAt INTEGER,
    status TEXT,
    errorMessage TEXT,
    truncated INTEGER,
    FOREIGN KEY (chatId) REFERENCES ChatDB(id)
);

insertMessages:
INSERT OR REPLACE INTO MessageDB (id, chatId, author, message, updatedAt, status, errorMessage, truncated)
VALUES (?, ?, ?, ?, ?, ?, ?, ?);

insertMessage:
INSERT OR REPLACE INTO MessageDB (id, chatId, author, message, updatedAt, status, errorMessage, truncated)
VALUES (?, ?, ?, ?, ?, ?, ?, ?);

getMessages:
SELECT * FROM MessageDB;

getMessagesFromChat:
SELECT * FROM MessageDB WHERE chatId = ? ORDER BY updatedAt;

deleteMessagesFromChat:
DELETE FROM MessageDB WHERE chatId = ?;

deleteMessage:
DELETE FROM MessageDB WHERE id = ?;

deleteMessages:
DELETE FROM MessageDB WHERE id NOT IN (?);